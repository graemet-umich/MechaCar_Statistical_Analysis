## MechaCarChallenge.RScript


## Deliverable 1: Linear Regression to Predict MPG

# load dplyr package
library(dplyr)

# Import and read in the MechaCar_mpg.csv file as a dataframe
mc_df <- read.csv(file='MechaCar_mpg.csv', check.names = F, stringsAsFactors = F)

# Perform linear regression
(mc_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mc_df))

# Summarize linear regression
summary(mc_lm)


## Deliverable 2: Summary Statistics on Suspension Coils

# import and read in the Suspension_Coil.csv file as a table
sc_table <- read.csv(file='Suspension_Coil.csv', check.names = F, stringsAsFactors = F)

# get total summary
cat ('total_summary dataframe:\n')
(total_summary <- sc_table %>%
  summarise(Mean = mean(PSI), Median = median(PSI), Variance = sd(PSI)^2, SD = sd(PSI)))

cat('\n')

# get lot summary
cat('lot_summary dataframe:\n')
(lot_summary <- as.data.frame(sc_table %>% 
    group_by(Manufacturing_Lot) %>% 
    summarize(Mean = mean(PSI), Median = median(PSI), Variance = sd(PSI)^2, SD = sd(PSI))))


## Deliverable 3: T-Tests on Suspension Coils

# Compare sample means to population mean: use one-sample t-tests
# **Note: I could not get the subset argument of t.test() to work**
# **I provide an alternative solution with the correct df=49.**

# all Lot mean PSI v. population mean PSI
cat('\n\nt-test: mean of all Lots v. mean of population\n')
t.test(sc_table$PSI, mu = 1500)

# by Lot t-tests comparing Lot PSI means with population mean

cat('t-test: mean of Lot1 v. mean of population\n')
lot1 <- subset(sc_table, Manufacturing_Lot == "Lot1", select = PSI)
t.test(lot1, mu = 1500)

cat('t-test: mean of Lot2 v. mean of population\n')
lot2 <- subset(sc_table, Manufacturing_Lot == "Lot2", select = PSI)
t.test(lot2, mu = 1500)

cat('t-test: mean of Lot3 v. mean of population\n')
lot3 <- subset(sc_table, Manufacturing_Lot == "Lot3", select = PSI)
t.test(lot3, mu = 1500)
